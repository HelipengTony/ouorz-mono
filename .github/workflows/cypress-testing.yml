name: Cypress Testing
on:
  push:
    branches:
      - main
    paths:
      - 'apps/analytics/**'
      - 'apps/main/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths:
      - 'apps/**'
      - '.github/workflows/**'
jobs:
  cypress:
    name: Testing
    runs-on: ubuntu-latest
    env:
       TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
       TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            fetch-depth: 2
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --immutable
      - name: Setup Environment Variables for Main App
        run: |
          touch apps/main/.env
          echo NEXT_PUBLIC_SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> apps/main/.env
          echo SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} >> apps/main/.env
          echo SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }} >> apps/main/.env
          echo SENTRY_ORG=${{ secrets.SENTRY_ORG }} >> apps/main/.env
          echo NEXT_PUBLIC_BUTTONDOWN_TOKEN=${{ secrets.BUTTONDOWN_TOKEN }} >> apps/main/.env
          echo NEXT_PUBLIC_LC_KEY=${{ secrets.LC_KEY }} >> apps/main/.env
          echo NEXT_PUBLIC_LC_ID=${{ secrets.LC_ID }} >> apps/main/.env
      - name: Run Cypress for Main App
        uses: cypress-io/github-action@v4
        with:
          working-directory: apps/main
          start: yarn run dev:test
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          record: true
          browser: chrome
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Environment Variables for Analytics App
        run: |
          touch apps/analytics/.env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> apps/analytics/.env
          echo HASH_SALT=${{ secrets.HASH_SALT }} >> apps/analytics/.env
          echo MAXMIND_LICENSE_KEY=${{ secrets.MAXMIND_LICENSE_KEY }} >> apps/analytics/.env
      - name: Build Prisma Client
        run: cd apps/analytics && yarn run build-postgresql-client
      - name: Build Analytics App
        run: yarn run build:analytics
